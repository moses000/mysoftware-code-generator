package services

import (
	"yourapp/models"
	"database/sql"
	"fmt"
)

// Create{{.Name | title}} creates a new record in the database
func Create{{.Name | title}}(db *sql.DB, model *models.{{.Name | title}}) (*models.{{.Name | title}}, error) {
	// Example SQL query for inserting a new record into your_table
	query := `INSERT INTO {{.Name}} (column1, column2, column3) 
	          VALUES ($1, $2, $3) RETURNING id`
	
	var id int
	err := db.QueryRow(query, model.Column1, model.Column2, model.Column3).Scan(&id)
	if err != nil {
		return nil, fmt.Errorf("could not create record: %v", err)
	}

	// Return the created model with the generated ID
	model.ID = id
	return model, nil
}

// Get{{.Name | title}}ByID retrieves a record by ID from the database
func Get{{.Name | title}}ByID(db *sql.DB, id int) (*models.{{.Name | title}}, error) {
	// Example SQL query for retrieving a record by ID
	query := `SELECT id, column1, column2, column3 FROM {{.Name}} WHERE id = $1`
	
	var model models.{{.Name | title}}
	err := db.QueryRow(query, id).Scan(&model.ID, &model.Column1, &model.Column2, &model.Column3)
	if err != nil {
		if err == sql.ErrNoRows {
			return nil, fmt.Errorf("record not found")
		}
		return nil, fmt.Errorf("could not retrieve record: %v", err)
	}

	return &model, nil
}

// Update{{.Name | title}} updates a record in the database
func Update{{.Name | title}}(db *sql.DB, id int, model *models.{{.Name | title}}) (*models.{{.Name | title}}, error) {
	// Example SQL query for updating a record by ID
	query := `UPDATE {{.Name}} SET column1 = $1, column2 = $2, column3 = $3 WHERE id = $4`
	
	_, err := db.Exec(query, model.Column1, model.Column2, model.Column3, id)
	if err != nil {
		return nil, fmt.Errorf("could not update record: %v", err)
	}

	// Return the updated model
	model.ID = id
	return model, nil
}

// Delete{{.Name | title}} deletes a record from the database
func Delete{{.Name | title}}(db *sql.DB, id int) error {
	// Example SQL query for deleting a record by ID
	query := `DELETE FROM {{.Name}} WHERE id = $1`
	
	_, err := db.Exec(query, id)
	if err != nil {
		return fmt.Errorf("could not delete record: %v", err)
	}

	return nil
}
